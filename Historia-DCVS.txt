Historia DCVS
===================


Durante mucho tiempo la gestión o control de versiones se llevó a cabo
de manera centralizada con todos sus defectos y ventajas, llegado el 
momento este esquema no pudo soportar los sistemas modernos lo cual condujo 
a la creación de Distributed Control Version Systems. 
En un modelo distribuido cada desarrollador tiene su propio repositorio,
trabaja en forma local, modifica y crea archivos o directorios sin
conocimiento de los demás, es solo hasta que se realiza una operación 
del tipo push, que se envían los cambios a otro repositorio.

Bajo este escenario cada nodo es completamente independiente y compartir 
es opcional.

----------


Sobre el esquema de trabajo
-------------



> **Los conceptos clave de este esquema son:**

> - Los esquemas centralizados se enfocan en sincronizar, seguir y 
respaldar archivos, los distribuidos se enfocan en compartir cambios, 
cada cambio tiene un identificador único.
> - Escribir/Grabar o descargar y aplicar son operaciones separadas, 
en un esquema centralizado todo esto ocurre al mismo tiempo.
> - Existen dos términos importante:
> - Push: acción de mandar cambios a algún otro repositorio.
> - Pull: obtener cambios de otro repositorio.


> **Las principales ventajas son:**

> - Es rápido, los diffs, que son comparaciones que se realizan entre
 la versión actual del proyecto y las anteriores, los commits y los
  reverts, que son almacenar de forma segura los cambios y revertir 
  alguna modificación respectivamente, todo ello ocurre de forma local.
> - Se trabaja offline.
> - Se adapta bien a los cambios.
> - Realizar un desarrollo local (branch) y enviarlo para integrarse 
al repositorio principal (merge) son operaciones que se realizan 
fácilmente.
> -  Requiere poco mantenimiento.

#### Dos exponentes importantes son git y Mercurial

Mercurical es rápido y simple. Se le conoce con el nickname de hg, 
símbolo de la tabla periódica del mercurio.

Los desarrolladores de Linux necesitaban un nuevo sistema de control 
de versiones así que acudieron al gurú de Linux, Torvalds, en busca 
de una solución.
Git fue creado como una herramienta que pudiera adaptarse al cambio 
y al desarrollo colaborativo. 
Este esquema fue concebido para ser completamente distribuido, los 
programadores se hallan en cualquier parte y pueden trabajar desde 
diferentes compañías o desde su casa y todos contribuyen al mismo
 proyecto.
